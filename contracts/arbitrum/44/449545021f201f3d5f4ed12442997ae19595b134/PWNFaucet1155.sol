// SPDX-License-Identifier: MIT
pragma solidity 0.8.19;

import {ERC1155} from "./ERC1155.sol";
import {Utils} from "./UtilsLib.sol";


contract PWNFaucet1155 is ERC1155 {

    uint256 public lastTokenId;


    constructor() ERC1155("") {}


    function mint(address receiver, uint256 amount) external {
        _mint(receiver, ++lastTokenId, amount, "");
    }

    function uri(uint256 tokenId) override public pure returns (string memory) {
        string memory svg = '<svg width="300" height="300" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10Z" fill="#111111"/><path fill-rule="evenodd" clip-rule="evenodd" d="M6.14975 18.1167C6.14479 18.0602 6.14225 18.003 6.14225 17.9452V16.5866C5.91516 16.7186 5.65151 16.7942 5.3703 16.7942C4.5175 16.7942 3.82617 16.0992 3.82617 15.2419V11.3611C3.82617 10.5038 4.5175 9.80883 5.3703 9.80883C5.88982 9.80883 6.34942 10.0668 6.6293 10.4622C6.75338 10.3222 6.89742 10.2004 7.05696 10.101C6.48751 9.4538 6.14225 8.60538 6.14225 7.6765C6.14225 5.64602 7.79198 4 9.82702 4H10.2149C12.2499 4 13.8997 5.64602 13.8997 7.6765C13.8997 8.60538 13.5544 9.4538 12.985 10.101C13.1445 10.2003 13.2885 10.3222 13.4126 10.4621C13.6925 10.0667 14.1521 9.80883 14.6716 9.80883C15.5244 9.80883 16.2157 10.5038 16.2157 11.3611V15.2419C16.2157 16.0992 15.5244 16.7942 14.6716 16.7942C14.3904 16.7942 14.1267 16.7186 13.8997 16.5866V17.9452C13.8997 17.9966 13.8977 18.0474 13.8937 18.0978C12.7199 18.6755 11.3991 19 10.0024 19C8.62108 19 7.31386 18.6826 6.14975 18.1167Z" fill="#111111"/><path d="M7.64645 7.64645C7.84171 7.45118 8.15829 7.45118 8.35355 7.64645C8.63031 7.9232 9.13925 8.26027 9.73034 8.3565C10.2904 8.44767 10.9617 8.33122 11.6464 7.64645C11.8417 7.45118 12.1583 7.45118 12.3536 7.64645C12.5488 7.84171 12.5488 8.15829 12.3536 8.35355C11.4383 9.26878 10.4429 9.48566 9.56966 9.3435C8.72742 9.20639 8.03636 8.74346 7.64645 8.35355C7.45118 8.15829 7.45118 7.84171 7.64645 7.64645Z" fill="#00FFE0"/><path fill-rule="evenodd" clip-rule="evenodd" d="M10.2581 19.9967C15.6617 19.8598 20 15.4366 20 10C20 4.47715 15.5228 0 10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20H10.0012M10.2542 18.9965C10.1702 18.9988 10.0858 19 10.0012 19C8.62032 18.9998 7.31352 18.6824 6.14975 18.1167C6.14479 18.0602 6.14225 18.003 6.14225 17.9452V16.5866C5.91516 16.7186 5.65151 16.7942 5.3703 16.7942C5.29282 16.7942 5.21667 16.7884 5.14225 16.7774C4.39759 16.6665 3.82617 16.0213 3.82617 15.2419V11.3611C3.82617 10.5038 4.5175 9.80883 5.3703 9.80883C5.47359 9.80883 5.57451 9.81903 5.67212 9.83847C5.82379 9.86868 5.96747 9.92122 6.09962 9.99254C6.3102 10.1062 6.49152 10.2675 6.6293 10.4622C6.75338 10.3222 6.89742 10.2004 7.05696 10.101C6.83687 9.85085 6.65026 9.57065 6.50414 9.26736C6.46612 9.18844 6.43083 9.10795 6.39842 9.02602C6.23309 8.60821 6.14225 8.15294 6.14225 7.6765C6.14225 5.64602 7.79198 4 9.82702 4H10.2149C12.2499 4 13.8997 5.64602 13.8997 7.6765C13.8997 8.15293 13.8088 8.60819 13.6435 9.02599C13.6111 9.10793 13.5758 9.18843 13.5378 9.26736C13.3916 9.57065 13.205 9.85085 12.985 10.101C13.1445 10.2003 13.2885 10.3222 13.4126 10.4621C13.5503 10.2675 13.7316 10.1062 13.9421 9.99259C14.0743 9.92124 14.2181 9.86868 14.3698 9.83846C14.4674 9.81902 14.5683 9.80883 14.6716 9.80883C15.5244 9.80883 16.2157 10.5038 16.2157 11.3611V15.2419C16.2157 16.0213 15.6443 16.6665 14.8997 16.7774C14.8252 16.7884 14.7491 16.7942 14.6716 16.7942C14.3904 16.7942 14.1267 16.7186 13.8997 16.5866V17.9452C13.8997 17.9966 13.8977 18.0474 13.8937 18.0978C12.7907 18.6407 11.5578 18.96 10.2542 18.9965ZM17.2117 15.3852C17.2144 15.3378 17.2157 15.29 17.2157 15.2419V11.3611C17.2157 9.98627 16.1292 8.85758 14.7608 8.81037C14.8515 8.44722 14.8997 8.06735 14.8997 7.6765C14.8997 5.09162 12.8001 3 10.2149 3H9.82702C7.24182 3 5.14225 5.09162 5.14225 7.6765C5.14225 8.06735 5.19043 8.44722 5.28111 8.81037C3.91273 8.85755 2.82617 9.98626 2.82617 11.3611V15.2419C2.82617 15.3106 2.82889 15.3787 2.83422 15.4461C1.68329 13.9341 1 12.0469 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10C19 12.0195 18.3349 13.8836 17.2117 15.3852Z" fill="#00FFE0"/><path d="M10.2581 19.9967C10.2162 19.9978 10.1743 19.9986 10.1323 19.9991C10.1205 19.9993 10.1087 19.9994 10.097 19.9995C10.0655 19.9998 10.034 20 10.0024 20" fill="#00FFE0"/></svg>';

        string memory json = Utils.encode(bytes(string(abi.encodePacked('{"name": "PWN Faucet NFT#', Utils.toString(tokenId), '", "description": "Just a testnet NFT from faucet", "image": "data:image/svg+xml;base64,', Utils.encode(bytes(svg)), '"}'))));
        string memory output = string(abi.encodePacked('data:application/json;base64,', json));

        return output;
    }

}

