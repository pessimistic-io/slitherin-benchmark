// SPDX-License-Identifier: CC0-1.0

/// @title cc0llective - Deterministic Deployer

/**cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░  ░░ ░ ░░░░░░░░░░░ ░░░░ ░░░░░░░░░░░
░░░░░░░░░░░ ░░ ░ ░ ░░░░░░░░░░░  ░░░░░░░░░░░░░░░
░    ░    ░ ░░ ░ ░ ░    ░    ░ ░░░░ ░ ░░ ░    ░
░ ░░░░ ░░░░ ░░ ░ ░ ░ ░ ░░ ░░░░ ░░░░ ░ ░░ ░ ░ ░░
░    ░    ░░  ░░ ░ ░    ░    ░░   ░ ░░  ░░    ░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0*cc0**/

pragma solidity ^0.8.15;

contract DeterministicDeployer {
    bytes private constant _INIT_CONTRACT_BYTECODE =
        hex"60a06040523060805234801561001457600080fd5b50608051610b0a61004b6000396000818160ca015281816101130152818161019b015281816101db01526102570152610b0a6000f3fe60806040526004361061003f5760003560e01c80633659cfe6146100445780634f1ef2861461006657806352d1902d14610079578063babed18a146100a0575b600080fd5b34801561005057600080fd5b5061006461005f36600461086e565b6100c0565b005b61006461007436600461089f565b610191565b34801561008557600080fd5b5061008e61024a565b60405190815260200160405180910390f35b3480156100ac57600080fd5b506100646100bb36600461086e565b6102fd565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101115760405162461bcd60e51b815260040161010890610961565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661014361035f565b6001600160a01b0316146101695760405162461bcd60e51b8152600401610108906109ad565b61017281610380565b6040805160008082526020820190925261018e9183919061039c565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101d95760405162461bcd60e51b815260040161010890610961565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661020b61035f565b6001600160a01b0316146102315760405162461bcd60e51b8152600401610108906109ad565b61023a82610380565b6102468282600161039c565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102ea5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610108565b50600080516020610a8e83398151915290565b600061030761050c565b9050600061031361035f565b6001600160a01b03160361032657600080fd5b6001600160a01b038116158061034d5750816001600160a01b0316816001600160a01b0316145b61035657600080fd5b61024682610534565b6000600080516020610a8e8339815191525b546001600160a01b0316919050565b3361038961050c565b6001600160a01b03161461018e57600080fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156103d4576103cf83610588565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561042e575060408051601f3d908101601f1916820190925261042b918101906109f9565b60015b6104915760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610108565b600080516020610a8e83398151915281146105005760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610108565b506103cf838383610627565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610371565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61055d61050c565b604080516001600160a01b03928316815291841660208301520160405180910390a161018e81610652565b6001600160a01b0381163b6105f55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610108565b80600080516020610a8e8339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b610630836106de565b60008251118061063d5750805b156103cf5761064c838361071e565b50505050565b6001600160a01b0381166106b75760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610108565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610606565b6106e781610588565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6107865760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610108565b600080846001600160a01b0316846040516107a19190610a3e565b600060405180830381855af49150503d80600081146107dc576040519150601f19603f3d011682016040523d82523d6000602084013e6107e1565b606091505b50915091506108098282604051806060016040528060278152602001610aae60279139610812565b95945050505050565b6060831561082157508161084b565b8251156108315782518084602001fd5b8160405162461bcd60e51b81526004016101089190610a5a565b9392505050565b80356001600160a01b038116811461086957600080fd5b919050565b60006020828403121561088057600080fd5b61084b82610852565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156108b257600080fd5b6108bb83610852565b9150602083013567ffffffffffffffff808211156108d857600080fd5b818501915085601f8301126108ec57600080fd5b8135818111156108fe576108fe610889565b604051601f8201601f19908116603f0116810190838211818310171561092657610926610889565b8160405282815288602084870101111561093f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215610a0b57600080fd5b5051919050565b60005b83811015610a2d578181015183820152602001610a15565b8381111561064c5750506000910152565b60008251610a50818460208701610a12565b9190910192915050565b6020815260008251806020840152610a79816040850160208701610a12565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ef91ab0cd8869509629a3009126af5234f730451bde6e05d93e0c221eb2bfd8164736f6c634300080f0033";
    bytes private constant _ERC1967_PROXY_BYTECODE =
        hex"6040608081523461027157610443908138038061001b81610276565b93843982019181818403126102715780516001600160a01b0381169190828103610271576020948583015160018060401b0393848211610271570181601f8201121561027157805190610075610070836102b1565b610276565b918083528883019389828401011161027157838961009393016102cc565b823b15610217577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319168617905585516000957fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8783a2815115801590610210575b610111575b865160e7908161035c8239f35b833b156101bf57505184928392905af43d156101b7573d91610135610070846102b1565b9283523d848785013e5b84519360608501918211858310176101a3575084957f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c91610196965260278552840152660819985a5b195960ca1b85840152610301565b5080388080808080610104565b634e487b7160e01b81526041600452602490fd5b60609161013f565b62461bcd60e51b815260048101889052602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b50856100ff565b855162461bcd60e51b815260048101889052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761029b57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161029b57601f01601f191660200190565b918091926000905b8282106102ec5750116102e5575050565b6000910152565b915080602091830151818601520182916102d4565b9091901561030d575090565b81511561031d5750805190602001fd5b6044604051809262461bcd60e51b82526020600483015261034d81518092816024860152602086860191016102cc565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220d4b99b1971967e9678ddac211adb1429fa1cffcbb14f697c77e60b318cb81a9464736f6c634300080f0033";

    bytes32 private constant _INIT_CONTRACT_BYTECODE_HASH = keccak256(_INIT_CONTRACT_BYTECODE);

    mapping(address => address) public deployedProxies;

    event InitContractCreated(address indexed addr, uint256 salt);
    event ProxyCreated(address indexed addr, address admin, uint256 salt, address implementation, bytes32 bytecodeHash);

    function calculateAddress(uint256 salt, bytes32 bytecodeHash) private view returns (address) {
        return address(
            uint160(uint256(keccak256(abi.encodePacked(bytes1(0xff), address(this), bytes32(abi.encode(salt)), bytecodeHash))))
        );
    }

    function getProxyBytecode(address admin, address impl) private pure returns (bytes memory) {
        return abi.encodePacked(
            _ERC1967_PROXY_BYTECODE, abi.encode(impl, abi.encodePacked(bytes4(0xbabed18a), uint256(uint160(admin))))
        );
    }

    function calculateInitContractAddress(uint256 salt) external view returns (address) {
        return calculateAddress(salt, _INIT_CONTRACT_BYTECODE_HASH);
    }

    function calculateProxyAddress(address admin, uint256 salt, address impl) public view returns (address) {
        return calculateAddress(salt, keccak256(getProxyBytecode(admin, impl)));
    }

    function createInitContract(uint256 salt) external returns (address addr) {
        bytes memory bytecode = _INIT_CONTRACT_BYTECODE;
        bytes32 _salt = bytes32(abi.encode(salt));

        /// @solidity memory-safe-assembly
        // solhint-disable-next-line no-inline-assembly
        assembly {
            addr := create2(0, add(bytecode, 0x20), mload(bytecode), _salt)
        }

        emit InitContractCreated(addr, salt);
    }

    function createProxy(address admin, uint256 salt, address impl) external returns (address addr) {
        bytes memory bytecode = getProxyBytecode(admin, impl);
        bytes32 _salt = bytes32(abi.encode(salt));

        address expectedAddress = calculateProxyAddress(admin, salt, impl);
        require(deployedProxies[expectedAddress] == address(0), "PREVIOUSLY_DEPLOYED");

        /// @solidity memory-safe-assembly
        // solhint-disable-next-line no-inline-assembly
        assembly {
            addr := create2(0, add(bytecode, 0x20), mload(bytecode), _salt)
        }

        // solhint-disable-next-line reason-string
        require(expectedAddress == addr);

        deployedProxies[addr] = admin;
        emit ProxyCreated(addr, admin, salt, impl, keccak256(bytecode));
    }
}

