// SPDX-License-Identifier: MIT

pragma solidity 0.8.15;

import "./Base64.sol";



/// @title Library for storing SVG image of veNFT.
/// @author belbix
library VeLogo {

  /// @dev Return SVG logo of veNFT.
  function tokenURI(uint _tokenId, uint _balanceOf, uint untilEnd, uint _value) public pure returns (string memory output) {
    output = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 900"><style>.b{fill:#4F6295;}.g{fill:#D3F85A;}.f{fill:#D0DA55;}.w{fill:#FFFFFF;}.s{font-size:37px;}</style><rect fill="#2B3A5B" width="600" height="900"/><rect class="b" x="55" y="424" width="544" height="98"/><rect class="b" x="0" y="544" width="517" height="98"/><rect class="b" x="0" y="772" width="516" height="98"/><rect class="b" x="55" y="658" width="544" height="98"/><path class="g" d="M317.3,348.9h-0.4c-1,0-2-0.3-2.7-1c-0.9-0.8-1.5-1.9-1.5-3.1l-1.8-51.4c-0.1-2.2,1.4-4,3.6-4.3c40.9-6.6,70.6-42.8,69.1-84.3c-0.5-13.3-4.2-26.5-10.8-38c-1.1-1.9-0.5-4.4,1.3-5.6l42.5-28.2c0.9-0.7,2.1-1,3.3-0.7c1.1,0.2,2.2,0.9,2.8,1.9c0.1,0.1,0.1,0.3,0.1,0.4c21.7,36.1,26.2,79.7,12.5,119.5c-8.9,25.8-24.8,48.3-46.2,65.1C368.5,335.7,343.6,345.9,317.3,348.9C317.4,348.9,317.4,348.9,317.3,348.9z M419.2,134c-0.5,0-1,0.2-1.4,0.5l-0.4,0.3l-42.2,28c-1.1,0.7-1.4,2.2-0.8,3.3c6.7,11.7,10.5,25.1,11,38.8c1.5,42.3-28.8,79.4-70.6,86.1c-1.2,0.2-2.1,1.3-2.1,2.6l1.8,51.4c0,0.7,0.3,1.3,0.8,1.8c0.4,0.4,1,0.6,1.6,0.6h0.3c25.9-3,50.4-13.1,70.9-29.3c21.1-16.6,36.9-38.8,45.6-64.3c13.6-39.5,9.1-82.6-12.5-118.4c-0.1-0.1-0.1-0.2-0.1-0.3c-0.4-0.4-0.9-0.7-1.4-0.8C419.5,134,419.4,134,419.2,134z M340.1,337.3c-0.1,0-0.3,0-0.4-0.1c-0.2-0.1-0.4-0.3-0.4-0.5l-12.8-42.6c-0.1-0.3,0-0.6,0.1-0.8c0.1-0.2,0.4-0.3,0.6-0.3c4.4-1.4,8.7-3,12.6-4.9c0.2-0.1,0.4-0.1,0.7,0c0.2,0.1,0.4,0.2,0.5,0.4l19.1,40.1c0.2,0.4,0,1-0.4,1.2c-6.3,3-12.8,5.5-19.3,7.5C340.3,337.3,340.2,337.3,340.1,337.3z M328.4,294.5l12.3,40.9c5.9-1.9,11.8-4.1,17.4-6.8L339.9,290C336.2,291.7,332.4,293.2,328.4,294.5z M376.5,320c-0.1,0-0.1,0-0.2,0c-0.2,0-0.4-0.2-0.6-0.4l-24.7-36.9c-0.3-0.4-0.2-0.9,0.2-1.2c3.7-2.5,7.3-5.4,10.7-8.6c0.2-0.2,0.4-0.2,0.6-0.2c0.2,0,0.5,0.1,0.6,0.3l29.9,32.7c0.3,0.4,0.3,0.9,0,1.2c-4.9,4.5-10.3,8.9-16.2,12.9C376.8,319.9,376.6,320,376.5,320z M353,282.4l23.7,35.4c5.3-3.6,10.2-7.5,14.6-11.6l-28.8-31.4C359.5,277.6,356.3,280.2,353,282.4z M406.1,292.7c-0.2,0-0.4-0.1-0.6-0.2l-34.4-28c-0.4-0.3-0.4-0.8-0.1-1.2c2.8-3.5,5.3-7.2,7.6-11.3c0.1-0.2,0.3-0.4,0.5-0.4c0.2-0.1,0.5,0,0.7,0.1l38.4,22.4c0.4,0.2,0.6,0.8,0.3,1.2c-3.3,5.8-7.3,11.5-11.7,17C406.6,292.6,406.4,292.7,406.1,292.7C406.1,292.7,406.1,292.7,406.1,292.7z M372.8,263.7l33.1,26.9c4-5,7.5-10.2,10.6-15.4l-36.9-21.6C377.6,257.2,375.3,260.6,372.8,263.7z M426.3,258.1c-0.2,0-0.4-0.1-0.5-0.2l-41.1-16.5c-0.4-0.2-0.7-0.7-0.5-1.1c1.6-4.1,3-8.4,4-13c0.1-0.2,0.2-0.4,0.4-0.5c0.2-0.1,0.4-0.2,0.7-0.1l43.3,10.1c0.5,0.1,0.8,0.6,0.7,1c-1.1,4.9-2.4,9.5-4,14.2c-0.7,1.8-1.3,3.7-2,5.5c-0.1,0.3-0.3,0.5-0.6,0.5C426.5,258.1,426.4,258.1,426.3,258.1z M386.2,240.1l39.7,15.9c0.6-1.6,1.2-3.1,1.7-4.6c1.5-4.3,2.7-8.7,3.8-13.2l-41.6-9.7C388.8,232.6,387.6,236.5,386.2,240.1z M435.3,218.8C435.3,218.8,435.3,218.8,435.3,218.8l-44.4-3.7c-0.5,0-0.8-0.5-0.8-0.9c0.2-3.4,0.3-6.6,0.2-9.6c0-1.3-0.1-2.7-0.2-4c0-0.5,0.3-0.9,0.8-0.9l44.4-3.1c0.5,0,0.9,0.3,0.9,0.8c0.5,6.8,0.5,13.8,0,20.6c0,0.2-0.1,0.4-0.3,0.6C435.8,218.7,435.6,218.8,435.3,218.8z M392,213.4l42.6,3.6c0.4-6.2,0.4-12.5,0-18.6l-42.6,3c0.1,1.1,0.1,2.1,0.2,3.2C392.2,207.3,392.1,210.2,392,213.4z M388.9,188.4c-0.4,0-0.8-0.3-0.9-0.7c-1-4.3-2.3-8.7-4-12.9c-0.1-0.2-0.1-0.5,0-0.7c0.1-0.2,0.3-0.4,0.5-0.5l41.4-16.1c0.4-0.2,1,0.1,1.2,0.5c2.5,6.5,4.6,13.1,6.1,19.7c0.1,0.2,0,0.5-0.1,0.7c-0.1,0.2-0.3,0.3-0.5,0.4l-43.4,9.6C389.1,188.4,389,188.4,388.9,188.4zM386,175c1.5,3.8,2.7,7.7,3.6,11.5l41.7-9.2c-1.4-5.9-3.2-11.9-5.5-17.8L386,175z"/><path class="g" d="M186,133.1l45.7,24.1c0.5,0.3,1,0.4,1.5,0.4c1,0,2-0.4,2.6-1.3c15.2-19.3,38-30.9,62.5-31.8c23.8-0.8,46.9,8.6,63.3,25.9c1.1,1.2,2.9,1.4,4.3,0.5l43.1-28.5c0.8-0.5,1.3-1.4,1.5-2.3c0.1-0.9-0.1-1.9-0.7-2.6c-16.4-19.8-38-34.7-62.4-43.1c-60.1-20.8-127,1.4-162.7,53.9c-0.5,0.8-0.7,1.8-0.5,2.7C184.5,131.8,185.1,132.6,186,133.1z M345.2,80.6c22.1,7.6,41.7,20.8,57,38.2l-37.6,24.9c-17.6-17.4-41.7-26.9-66.5-26c-25.6,0.9-49.4,12.6-65.8,32.1l-40-21C227,81.1,289.2,61.3,345.2,80.6z"/><path class="g" d="M233.2,158.5c-0.7,0-1.4-0.2-2-0.5l-45.7-24.1c-1.1-0.6-1.8-1.6-2.1-2.7c-0.3-1.2-0.1-2.4,0.6-3.4c36-52.8,103.3-75.1,163.7-54.2C372.3,82,394,97,410.5,116.9c0.8,0.9,1.1,2.1,0.9,3.3c-0.2,1.2-0.8,2.2-1.8,2.9l-43.1,28.5c-1.8,1.1-4,0.9-5.4-0.6c-16.2-17.1-39-26.5-62.7-25.7c-24.3,0.9-46.8,12.3-61.9,31.5C235.8,157.9,234.5,158.5,233.2,158.5z M301.5,67.5c-45.5,0-89.4,22.2-116,61.2c-0.4,0.6-0.5,1.3-0.4,2c0.2,0.7,0.6,1.3,1.2,1.6c0,0,0,0,0,0l45.7,24.1c1.1,0.6,2.4,0.3,3.1-0.7c15.4-19.5,38.4-31.2,63.2-32.1c24.1-0.9,47.4,8.7,64,26.2c0.8,0.9,2.1,1,3.2,0.4l43.1-28.5c0.6-0.4,1-1,1.1-1.7c0.1-0.7-0.1-1.4-0.6-2c-16.3-19.6-37.7-34.4-62-42.9C332.2,70,316.8,67.5,301.5,67.5z M232.4,150.8c-0.1,0-0.3,0-0.4-0.1l-40-21c-0.2-0.1-0.4-0.3-0.4-0.6c-0.1-0.2,0-0.5,0.1-0.7c17.1-23.6,40.9-40.8,68.8-49.7c28-8.9,57.4-8.5,85,1l0,0c22.1,7.7,42,21,57.3,38.5c0.2,0.2,0.2,0.4,0.2,0.7s-0.2,0.5-0.4,0.6l-37.6,24.9c-0.3,0.2-0.8,0.2-1.1-0.1c-17.4-17.2-41.4-26.6-65.8-25.7c-25.2,0.9-49,12.5-65.1,31.8C232.9,150.7,232.6,150.8,232.4,150.8z M193.7,128.6l38.4,20.2c16.4-19.4,40.4-31,65.9-31.9c24.7-0.9,48.9,8.5,66.6,25.7l36.2-24c-15.1-16.9-34.4-29.8-55.9-37.2l0,0C290.1,62.5,228.1,81.9,193.7,128.6z"/><path class="g" d="M294.8,290.8c-42.2-3.3-75.1-37.7-76.6-80.1c-0.4-13,2-25.6,7.4-37.4c0.7-1.6,0.1-3.5-1.5-4.3l-45.3-23.9c-0.8-0.4-1.8-0.5-2.6-0.2c-0.8,0.3-1.6,0.9-2,1.7c-2.3,4.9-4.4,10-6.2,15c-12.3,35.6-10,73.9,6.5,107.8c16.5,33.9,45.2,59.4,80.8,71.7c13.2,4.6,27,7.1,40.9,7.7h0.1c0.9,0,1.7-0.4,2.4-1c0.7-0.7,1-1.5,1-2.5l-1.8-51.4C297.8,292.3,296.5,290.9,294.8,290.8L294.8,290.8z"/><path class="g" d="M296.3,349.7h-0.1c-14.1-0.5-28-3.1-41.2-7.7c-35.8-12.4-64.7-38-81.3-72.1c-16.6-34.1-18.9-72.6-6.6-108.4c1.8-5.2,3.9-10.3,6.2-15.1c0.5-1,1.5-1.8,2.5-2.2c1.1-0.4,2.3-0.2,3.3,0.3l45.3,23.8c2,1,2.8,3.4,1.9,5.5c-5.3,11.6-7.7,24.1-7.3,37c1.5,41.8,33.9,75.8,75.6,79.2c0.1,0,0.2,0,0.3,0c2.2,0.2,3.8,1.9,3.9,4.1l1.8,51.4c0.1,1.2-0.4,2.3-1.2,3.1C298.5,349.2,297.4,349.7,296.3,349.7z M177.2,145.7c-0.3,0-0.5,0-0.8,0.1c-0.6,0.2-1.2,0.7-1.5,1.3c-2.3,4.7-4.3,9.8-6.1,14.9c-12.2,35.4-9.9,73.5,6.5,107.1c16.4,33.7,44.9,59,80.3,71.2c13.1,4.5,26.8,7.1,40.7,7.6l0.1,0c0.6,0,1.3-0.3,1.8-0.7c0.5-0.5,0.7-1.1,0.7-1.8L297,294c0-1.2-0.9-2.2-2.1-2.4c-0.1,0-0.2,0-0.2,0c-42.6-3.3-75.9-38.1-77.4-80.9c-0.4-13.2,2.1-25.9,7.4-37.7c0.6-1.2,0.1-2.6-1.1-3.2L178.3,146C178,145.8,177.6,145.7,177.2,145.7z"/><path class="g" d="M367.3,205.3c-1.3-36.4-31.9-64.9-68.2-63.6c-36.3,1.3-64.8,31.9-63.6,68.3c1.3,35.6,30.5,63.6,65.8,63.6c0.8,0,1.6,0,2.4,0C340,272.3,368.5,241.7,367.3,205.3L367.3,205.3z M303.5,267.6c-0.7,0-1.5,0-2.2,0c-32.1,0-58.8-25.5-59.9-57.9c-1.2-33.1,24.7-60.9,57.8-62.1c16-0.6,31.3,5.1,43,16.1c11.7,10.9,18.5,25.7,19.1,41.8C362.5,238.5,336.5,266.4,303.5,267.6L303.5,267.6z"/><path class="g" d="M301.3,274.5c-17.3,0-33.8-6.7-46.3-18.7c-12.6-12.1-19.8-28.4-20.4-45.8c-1.3-36.8,27.6-67.9,64.4-69.2c17.8-0.6,34.8,5.7,47.9,17.9c13.1,12.2,20.6,28.7,21.2,46.5c0,0,0,0,0,0v0c1.3,36.8-27.6,67.8-64.4,69.1L301.3,274.5z M301.4,142.5c-0.8,0-1.6,0-2.3,0c-35.8,1.3-64,31.5-62.7,67.4c1.3,35.2,29.8,62.8,65,62.8h2.4c35.8-1.3,63.9-31.5,62.7-67.4l0.9-0.1l-0.9,0c-0.6-17.4-8-33.4-20.7-45.3C333.6,148.7,317.9,142.5,301.4,142.5z M303.5,268.4h-2.2c-15.8,0-30.7-6.1-42.2-17.1c-11.4-11-18.1-25.8-18.6-41.7c-0.6-16.2,5.2-31.7,16.3-43.6c11.1-11.9,26.1-18.8,42.3-19.3c16.2-0.6,31.7,5.2,43.6,16.3c11.9,11.1,18.8,26.1,19.3,42.4c0.6,16.2-5.2,31.7-16.3,43.6c-11,11.8-26,18.7-42.1,19.3C303.7,268.4,303.6,268.4,303.5,268.4z M303.5,267.5L303.5,267.5L303.5,267.5z M301.4,148.5c-0.7,0-1.4,0-2.1,0c-15.7,0.5-30.3,7.2-41.1,18.8c-10.8,11.6-16.4,26.6-15.8,42.4c1.1,32,27.1,57,59,57h1.9c0.1,0,0.2,0,0.2,0c15.7-0.5,30.3-7.2,41.1-18.8c10.8-11.6,16.4-26.6,15.8-42.4c-0.6-15.8-7.2-30.4-18.8-41.2C330.6,154.1,316.3,148.5,301.4,148.5z"/><path class="g" d="M62.2,419.7v97.8c0,0.5,0.4,0.9,0.9,0.9H600v-1.8H64v-96h536v-1.8H63.1C62.6,418.8,62.2,419.2,62.2,419.7z"/><path class="g" d="M62.2,651.8v97.8c0,0.5,0.4,0.9,0.9,0.9H600v-1.8H64v-96h536v-1.8H63.1C62.6,650.9,62.2,651.3,62.2,651.8z"/><path class="g" d="M512.3,636.3v-97.8c0-0.5-0.4-0.9-0.9-0.9H0v1.8h510.5v96H0v1.8h511.4C511.9,637.2,512.3,636.8,512.3,636.3z"/><path class="g" d="M512.3,863.8V766c0-0.5-0.4-0.9-0.9-0.9H0v1.8h510.5v96H0v1.8h511.4C511.9,864.7,512.3,864.3,512.3,863.8z"/>';
    output = string(abi.encodePacked(output, '<text transform="matrix(1 0 0 1 88 463)" class="f s">ID:</text><text transform="matrix(1 0 0 1 88 502)" class="w s">', _toString(_tokenId), '</text>'));
    output = string(abi.encodePacked(output, '<text transform="matrix(1 0 0 1 88 579)" class="f s">Balance:</text><text transform="matrix(1 0 0 1 88 618)" class="w s">', _toString(_balanceOf / 1e18), '</text>'));
    output = string(abi.encodePacked(output, '<text transform="matrix(1 0 0 1 88 694)" class="f s">Until unlock:</text><text transform="matrix(1 0 0 1 88 733)" class="w s">', _toString(untilEnd / 60 / 60 / 24), ' days</text>'));
    output = string(abi.encodePacked(output, '<text transform="matrix(1 0 0 1 88 804)" class="f s">Power:</text><text transform="matrix(1 0 0 1 88 843)" class="w s">', _toString(_value / 1e18), '</text></svg>'));

    string memory json = Base64.encode(bytes(string(abi.encodePacked('{"name": "veLIZARD #', _toString(_tokenId), '", "description": "Locked LIZARD tokens", "image": "data:image/svg+xml;base64,', Base64.encode(bytes(output)), '"}'))));
    output = string(abi.encodePacked('data:application/json;base64,', json));
  }

  /// @dev Inspired by OraclizeAPI's implementation - MIT license
  ///      https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol
  function _toString(uint value) internal pure returns (string memory) {
    if (value == 0) {
      return "0";
    }
    uint temp = value;
    uint digits;
    while (temp != 0) {
      digits++;
      temp /= 10;
    }
    bytes memory buffer = new bytes(digits);
    while (value != 0) {
      digits -= 1;
      buffer[digits] = bytes1(uint8(48 + uint(value % 10)));
      value /= 10;
    }
    return string(buffer);
  }
}

