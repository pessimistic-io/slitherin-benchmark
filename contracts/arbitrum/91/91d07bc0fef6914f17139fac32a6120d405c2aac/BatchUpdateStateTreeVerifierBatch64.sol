// SPDX-License-Identifier: MIT

// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

// 2019 OKIMS

pragma solidity ^0.6.12;

library Pairing {

    uint256 constant PRIME_Q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;

    struct G1Point {
        uint256 X;
        uint256 Y;
    }

    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint256[2] X;
        uint256[2] Y;
    }

    /*
     * @return The negation of p, i.e. p.plus(p.negate()) should be zero. 
     */
    function negate(G1Point memory p) internal pure returns (G1Point memory) {

        // The prime q in the base field F_q for G1
        if (p.X == 0 && p.Y == 0) {
            return G1Point(0, 0);
        } else {
            return G1Point(p.X, PRIME_Q - (p.Y % PRIME_Q));
        }
    }

    /*
     * @return The sum of two points of G1
     */
    function plus(
        G1Point memory p1,
        G1Point memory p2
    ) internal view returns (G1Point memory r) {

        uint256[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;

        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }

        require(success,"pairing-add-failed");
    }

    /*
     * @return The product of a point on G1 and a scalar, i.e.
     *         p == p.scalar_mul(1) and p.plus(p) == p.scalar_mul(2) for all
     *         points p.
     */
    function scalar_mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {

        uint256[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require (success,"pairing-mul-failed");
    }

    /* @return The result of computing the pairing check
     *         e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
     *         For example,
     *         pairing([P1(), P1().negate()], [P2(), P2()]) should return true.
     */
    function pairing(
        G1Point memory a1,
        G2Point memory a2,
        G1Point memory b1,
        G2Point memory b2,
        G1Point memory c1,
        G2Point memory c2,
        G1Point memory d1,
        G2Point memory d2
    ) internal view returns (bool) {

        G1Point[4] memory p1 = [a1, b1, c1, d1];
        G2Point[4] memory p2 = [a2, b2, c2, d2];

        uint256 inputSize = 24;
        uint256[] memory input = new uint256[](inputSize);

        for (uint256 i = 0; i < 4; i++) {
            uint256 j = i * 6;
            input[j + 0] = p1[i].X;
            input[j + 1] = p1[i].Y;
            input[j + 2] = p2[i].X[0];
            input[j + 3] = p2[i].X[1];
            input[j + 4] = p2[i].Y[0];
            input[j + 5] = p2[i].Y[1];
        }

        uint256[1] memory out;
        bool success;

        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }

        require(success,"pairing-opcode-failed");

        return out[0] != 0;
    }
}

contract BatchUpdateStateTreeVerifierBatch64 {

    using Pairing for *;

    uint256 constant SNARK_SCALAR_FIELD = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
    uint256 constant PRIME_Q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;

    struct VerifyingKey {
        Pairing.G1Point alpha1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[137] IC;
    }

    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }

    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alpha1 = Pairing.G1Point(uint256(20111080972059956339770330822842174014028834762406291931369219466654304651947),uint256(12617701555281079140502645308327272670695003907823882015559302949283468652265));
        vk.beta2 = Pairing.G2Point([uint256(13542344348353495181403994427087825307359707135045861990032896341194354804027),uint256(21495413117026630692390948489284050783642854854611941789985830749278288076019)], [uint256(14506113082745454888160012508724679162141302039154827891210912565820929074277),uint256(3350288264585300535086052300399402169962936857002440578169769772249674537321)]);
        vk.gamma2 = Pairing.G2Point([uint256(1405893342850909592901993047116357102257777845904120854072918797353322262004),uint256(19039671411780007398709575658966632348032959209903650830372041924458096901884)], [uint256(10246278299067469558430169227798852211761712958408139619453971385803508820401),uint256(15610397642216218497160132307603098145221061848302396069439857040941724165478)]);
        vk.delta2 = Pairing.G2Point([uint256(218449558449230811211684913120166693986265997555702745202050296498830988537),uint256(5407412409774150903042787049136199519480710038481547450708858944052764255898)], [uint256(11041661707049238194800418097140585648833245776885036685698406508603026023618),uint256(133760400102501241432017477738575766306011192481736590344059611691663304908)]);
        vk.IC[0] = Pairing.G1Point(uint256(21154028465075083712658841897667003802526258215567114307761064418376815086215),uint256(1508603373580985357750185712435454283342822243681375102146040323901851882861));
        vk.IC[1] = Pairing.G1Point(uint256(17138670918452087442204333646184278115264761559617238017915185098227172982811),uint256(5611082957038412360589088211229082874946611618574538759210306439661299176945));
        vk.IC[2] = Pairing.G1Point(uint256(15390062030817469858239962767688560984963862923150691651695470714836749513537),uint256(2326278356592104332893498078974085120183205776960952327317801670322144268312));
        vk.IC[3] = Pairing.G1Point(uint256(670502483544788577495533106037306685680302193138027386568284657638217305162),uint256(13899932709234250089113138746199887493989716128773617251114173979406178685854));
        vk.IC[4] = Pairing.G1Point(uint256(1668858581160068229751170422086552283069112892923284875458714097455940271060),uint256(10963928549779385078551207286148560603493064860855479456777796037752746438821));
        vk.IC[5] = Pairing.G1Point(uint256(14443949715331357106440648501127551284419877012742935773796450280993895557950),uint256(7327092816369746696069608426307677295251675492358792703722654814347910670799));
        vk.IC[6] = Pairing.G1Point(uint256(5195131423503819493553434036524142715087086191307960034902232416510656885185),uint256(12954097701521836361385154063939800867915572539231767504727206187028067060316));
        vk.IC[7] = Pairing.G1Point(uint256(5014496811794396976665624820671057271105624005885691507118903143762222055653),uint256(2439861537398184499213246384674917439703377312852628599682703382994166713105));
        vk.IC[8] = Pairing.G1Point(uint256(4283779997045552072886989647120873562506891397517893101552024394063778228179),uint256(6797444259192627688173655690751340206418239290444353902720624326561114110758));
        vk.IC[9] = Pairing.G1Point(uint256(1764526698812192069022588686170356509360022164888258513593936487059961066941),uint256(17009662947771196235743594446075866146647869480629555603040823675969643779051));
        vk.IC[10] = Pairing.G1Point(uint256(4634044914106045971667518785339036534014121178220843446289537005542492308535),uint256(15546587576688521479105738976327958863746365837253142983784091540880955579980));
        vk.IC[11] = Pairing.G1Point(uint256(2715687604695872089734177102456674874291540185351660893793943298723076162023),uint256(8175293297644947591266018188895500373877148851930870966940114884237467841513));
        vk.IC[12] = Pairing.G1Point(uint256(20121655344011849412536946281011930004933787724346969597015929984774157832582),uint256(21105616102575587428032100019159228354467439290237984300855255375809452861700));
        vk.IC[13] = Pairing.G1Point(uint256(12196403456413067372907894607228547021168026355185769152640581456011640908115),uint256(21407951242918884928699901097047515520528209072349143202832003101963003432617));
        vk.IC[14] = Pairing.G1Point(uint256(5310579898763467707257750843874466287781776312027753089568037427631501300785),uint256(13656390395313566507812604343352575249308212454341840895399980715808616168680));
        vk.IC[15] = Pairing.G1Point(uint256(5228663941897766588851959590652190955458180715181587426615826411725401946424),uint256(17071465706070749339990865138715666296514424588111537608363813692692990940366));
        vk.IC[16] = Pairing.G1Point(uint256(21392686683745202445405791550348258910214506132555422218147448100798518012624),uint256(19973818140995305279304988251723192392522267302457604906450941473549909206005));
        vk.IC[17] = Pairing.G1Point(uint256(15195347567926738961665396600441664048946386695266635762683008484732412196206),uint256(5443504796488635873491333526101509884793241238220915769454608984351813705352));
        vk.IC[18] = Pairing.G1Point(uint256(507648814511001940181794192328810194158207104111469073500188579284369879392),uint256(19878164414562305196590521861798978690302638328953743153865298948302940844681));
        vk.IC[19] = Pairing.G1Point(uint256(7804204219955298169106734572698710394497148749473703625951731300392649704154),uint256(20749617701130874929367317738562309195716127925605185086004583710327959048427));
        vk.IC[20] = Pairing.G1Point(uint256(4136423452244920542789285713474930233560780284858790342002681682013099183779),uint256(9973148020780206454495393084156055095162709960047565170525379600003193810062));
        vk.IC[21] = Pairing.G1Point(uint256(7431606657645725193952573841697636390810591901046924605499097775346387992290),uint256(5564038490812252127842883537078377994942518033402640280384493207800949173851));
        vk.IC[22] = Pairing.G1Point(uint256(15626975527875622140792987711825573705920791436147184958617981173929107303657),uint256(14502833020345145695691362402464485762891674236180321493138116694907998011));
        vk.IC[23] = Pairing.G1Point(uint256(12878936960170927766371526382844902588843389976321318914661478214677770790248),uint256(5876460520718282533702520524897969113039507901531034929557462309166868606822));
        vk.IC[24] = Pairing.G1Point(uint256(16206306303565793121727450649844616805570868789440368125097120703656428468197),uint256(21466131705360086522427463180380688685767570787253803257228497277582175527492));
        vk.IC[25] = Pairing.G1Point(uint256(21415591897257783503862369405185488044149515290857177493989651919054569685198),uint256(19111807106136759041568303560519102945559357726442697071460970763574722828826));
        vk.IC[26] = Pairing.G1Point(uint256(18597076716458443423413289916997990176080742981245463826800606445425301059259),uint256(7848662551744864770963244474671513926512950753742401298459761273493739794876));
        vk.IC[27] = Pairing.G1Point(uint256(13478058920612073343883464152893321390311200483920696440656727524055057501695),uint256(1141484237022293981977393567736173116561183466681305710973251196757434813744));
        vk.IC[28] = Pairing.G1Point(uint256(15769077441619055970381886505780732308249815547683508143977406021029452872552),uint256(11041176207552285494760896858611142356090292881145533908058442986708927140068));
        vk.IC[29] = Pairing.G1Point(uint256(6317204961991307505110367333461546493002130407088713977697365919648289809555),uint256(16485259080552904056112526579040492506588962838309100629831761305228011180668));
        vk.IC[30] = Pairing.G1Point(uint256(4257110455950153652298535845399920474497037031925464616890886837426603419588),uint256(11872545793699592767799719701047416357370472440569693263077615092286272478514));
        vk.IC[31] = Pairing.G1Point(uint256(6961807017167071724371454268303022052413314092826667739692730740465087447637),uint256(3548416379898170774979179836877281134673281973630993406136692598268193428615));
        vk.IC[32] = Pairing.G1Point(uint256(21126159292924936794341610841149549910479950100575700253425887185534804026911),uint256(9665356991799845435109808741455357929036550119689810467582994476043039656375));
        vk.IC[33] = Pairing.G1Point(uint256(4126555849352009875773383333602810568818670985786945593706220065006276506699),uint256(13389907085387505200515368697127009874021544752954888239558364644026308267105));
        vk.IC[34] = Pairing.G1Point(uint256(9237247460110549033997472057018612356175421663903706416565822025921474348482),uint256(12479126715944469540020905209065301961586449718316255995034034427944451434840));
        vk.IC[35] = Pairing.G1Point(uint256(141999452778411753111875715249603444123023422502137319587911822280155648959),uint256(1953125230366380735124086773077985745995946475601777124731379373291524377234));
        vk.IC[36] = Pairing.G1Point(uint256(11781645780818495939618015750292991736294631437879209396450605477900247000129),uint256(10427776284156614685231665682387604681177186710015159262013630828614428971274));
        vk.IC[37] = Pairing.G1Point(uint256(7320842327404510671561729460506495430535413853828849843449519029765075554813),uint256(21672549045605752785173249488145571339262757812277123222081715504950345316114));
        vk.IC[38] = Pairing.G1Point(uint256(15843737739485817496811128063605940139111457287880259830761212263801078571298),uint256(18242013210254730973873870903453729710621046943883887111042684248588571061847));
        vk.IC[39] = Pairing.G1Point(uint256(20016595100062158316451938534243252321996797777010650604387061069048405385417),uint256(20993637865430287538984233040285431558951614830256982679897124168312952630939));
        vk.IC[40] = Pairing.G1Point(uint256(15334716930997133577306970429209161911742529260933017908277231237452607330821),uint256(685388011722901396424928778072393449123264587481808881182825804771090518383));
        vk.IC[41] = Pairing.G1Point(uint256(1303572165860930120284335343212677918045902191683549658721438126058571397640),uint256(13905311908068188694433787916547614635591226084525428070472134336893399093746));
        vk.IC[42] = Pairing.G1Point(uint256(14221300826968969082380487511562669771162038931016459790783016554828539071028),uint256(3793753201377522263643616048114341014139606587430774642745359231545618520074));
        vk.IC[43] = Pairing.G1Point(uint256(11832772449848274783470280628809411265387468482258558389852767954678108547210),uint256(14834860013882731405618722640186796344077421236283342428469907998531860454177));
        vk.IC[44] = Pairing.G1Point(uint256(17639041462588987659575385363021668478220589429834850328037158110389078883040),uint256(8704969675351836770098849680526710356004509474160008874237661643718531775648));
        vk.IC[45] = Pairing.G1Point(uint256(5300669047095411489879499682325147800890453538028385356237349525690882478918),uint256(15807078216435200960341268208073744792548344803921008654764854111918279022000));
        vk.IC[46] = Pairing.G1Point(uint256(16759701479370137632714483158195271493447455620368412483284976632032643763769),uint256(12119578575407359446677894550708029309579098640507319654992119663517978340030));
        vk.IC[47] = Pairing.G1Point(uint256(3546618055876451624271770844642081662395644632532568159350978635181892288450),uint256(7899711169092095967606908624829171809878683672403689963659422259393482150720));
        vk.IC[48] = Pairing.G1Point(uint256(12510986215555297660829149639903728729881090196649895701627872388148718275015),uint256(17938310289008954981347264094252860622099244536932534849229515962756808374025));
        vk.IC[49] = Pairing.G1Point(uint256(10409103229107940165748369566396677252139728324786456864640963494010260668235),uint256(12208504036723332249430584763478241147278778517031072962335060653268740832434));
        vk.IC[50] = Pairing.G1Point(uint256(19078937359506343330527168061276270611841567433397448629987841881566543425430),uint256(11481500418047012282975132773342910097993984928448563097150924565336610666536));
        vk.IC[51] = Pairing.G1Point(uint256(5668164983048179781866248655288808464925703406969538833351186308137830654277),uint256(2036685125881168735638155303624535536249217225379298881837967911494254746186));
        vk.IC[52] = Pairing.G1Point(uint256(10582885345920107024694752542268339630454841905176111334219464927407148285571),uint256(5302511072101913226528212309612354576738191518686848766232770054248911296133));
        vk.IC[53] = Pairing.G1Point(uint256(10763456976681834643711799449282626018019885337204621884611514607700042818803),uint256(2301609750924291463999855717400419535128299260641718628700547785424597102453));
        vk.IC[54] = Pairing.G1Point(uint256(14090175978138869104232840539484119022774252145335173930783246809099832962316),uint256(6221349702045432514870976695635674962728125885258176729129488888732828800410));
        vk.IC[55] = Pairing.G1Point(uint256(12979553571150817138420948789020393806894793915531144444421859462533374052099),uint256(19200617597505760330609395924204780472385656815449526965159307707620566764859));
        vk.IC[56] = Pairing.G1Point(uint256(17463292323109723850032883884721435618399847208181626612913544509828940781241),uint256(4640330488095610287297321719298782385410932546586616186092407400139615590090));
        vk.IC[57] = Pairing.G1Point(uint256(5026751021136652956884280623386725977584562160860216981445937597176863849153),uint256(3726806205455462506192306538007629772202324302040678177248736103409118613785));
        vk.IC[58] = Pairing.G1Point(uint256(10401634702025754926410545975890506063988215551615820658203094591849811159631),uint256(18749829455441645964781375179927225016584277575687706948231860700748733027052));
        vk.IC[59] = Pairing.G1Point(uint256(8900544578516002654755404382821090990852948336443604263092346279560463093021),uint256(18006601535750985461327662670949981534033907644968069359180602924268163004324));
        vk.IC[60] = Pairing.G1Point(uint256(4923009907077112126720542234146116224672392899835836662687070218433373705722),uint256(18423757328042105778787925090173086548101110659746089450844654256764118325601));
        vk.IC[61] = Pairing.G1Point(uint256(8496765642282856203983699155346261739858072134636611403990649857712160055778),uint256(4388334225743601326859195830073286369325699325286991437221049420432654092953));
        vk.IC[62] = Pairing.G1Point(uint256(6814778709224790817106591651987195100179673979164667477931063958497939427212),uint256(202848748206250811388580708835503713707654793206461021686825244651622264039));
        vk.IC[63] = Pairing.G1Point(uint256(9712073020664581454703761893278579101940468173428050353979543473165772895683),uint256(16040831046435892825035903107855958297938152758905062284792692747629553256707));
        vk.IC[64] = Pairing.G1Point(uint256(464285856079964863337668128884110751354784252445460337726538919141766442307),uint256(18298744009556568810538541912213974993321803850681854903651969678496784694111));
        vk.IC[65] = Pairing.G1Point(uint256(1095197435643971555064350556393021336605395355065960270057589173461184696337),uint256(2371995713846161841708775649454592609278907116185770018881555739791203555532));
        vk.IC[66] = Pairing.G1Point(uint256(21496449855100960838766768514830510452996823088263015662455987171227339154387),uint256(579596441272302995884967634501598678761512973483058268484496798383540310589));
        vk.IC[67] = Pairing.G1Point(uint256(18887705942025081976221623747494259379053007766953067407121210914692251976307),uint256(19263616461960262551559783019847173689300250342438900318562000334791634717184));
        vk.IC[68] = Pairing.G1Point(uint256(14716293115883307245092089544318348512298862035942865682986124416102553587746),uint256(13407174783655301681566217843988935740396704279597545147247198530403440438542));
        vk.IC[69] = Pairing.G1Point(uint256(8900997157012117172770905271175132729552960821748024149989068731273061894060),uint256(18274585601658156662940484885212221657515118604751892338041379436414857450227));
        vk.IC[70] = Pairing.G1Point(uint256(12167440767111275300984212539995067770335699142323631256234615040761402805822),uint256(9075299166921376582555856072820251116892867974126953073350366964708808984910));
        vk.IC[71] = Pairing.G1Point(uint256(2059815164798909576203732646672210899587142768137518599550435283468704025507),uint256(2608153945501014126591908624616527620011162747374867493421981432572216497882));
        vk.IC[72] = Pairing.G1Point(uint256(10599096542036501024265560487895513859113363423568037524937840260694705766171),uint256(9279326687807953384658592766685984239789127905534993112158348724015076837698));
        vk.IC[73] = Pairing.G1Point(uint256(18572463152745003849804098342368124919247700243449857746217649935067065850150),uint256(4271302815739774362417719364521319242832592843797563758771516686536354433825));
        vk.IC[74] = Pairing.G1Point(uint256(20588410275488673850673340736265898273778034663881535267761168002085081885071),uint256(14214623554987678047849743210352845290635958141580656013834998776699751159828));
        vk.IC[75] = Pairing.G1Point(uint256(2163722300592233786295471708199826265491705308195110455734978794412240252082),uint256(8267508554119920340725744568125044648312324782432899548133021564673192786292));
        vk.IC[76] = Pairing.G1Point(uint256(7197484269598779655985151220872592322066489414844363451684046156382303125419),uint256(21616596691508874538973614495991415514486861395908301007359214048159264706847));
        vk.IC[77] = Pairing.G1Point(uint256(9317296188908243633506496117686166305859402226985134506599967925055807406239),uint256(9246662625993721575939009540092858167693567801636177886999030975109306100431));
        vk.IC[78] = Pairing.G1Point(uint256(13130291969164442309654135261527037484695214343744471907179891767339554237812),uint256(19439420900777819255222132111763290888110851303845997171070229099783225604353));
        vk.IC[79] = Pairing.G1Point(uint256(8341274125831103087891955418526024155350981135186426107382130311966075308341),uint256(4004611672363485155286210618830799765020486401448881276116498234644093532588));
        vk.IC[80] = Pairing.G1Point(uint256(18169731422481037799505983555963375952636041638492364150413818994301923394922),uint256(6920580573279503695945721875233103879114044960770671707600918652213055872299));
        vk.IC[81] = Pairing.G1Point(uint256(14650110447931945378950543791319356392503885786645882445700101669286085199593),uint256(2672236893363303197228993949960317801525904563326503330829870235354157424455));
        vk.IC[82] = Pairing.G1Point(uint256(2528986115564995166900493334973939997264055530799688307116832245865032633252),uint256(16154503512380645952650117479127814018462759770354166106071852796538589151508));
        vk.IC[83] = Pairing.G1Point(uint256(19481294150685092990791924103805501678815906468656811961335770799971334206204),uint256(3363598330662226286855183671247665794560445868227630426048283517520728381115));
        vk.IC[84] = Pairing.G1Point(uint256(18978808201339133091409700185663114595291545168713536752334377601075245117564),uint256(1213612765235708464178869186669487814311448260124908714497814085098588994320));
        vk.IC[85] = Pairing.G1Point(uint256(14418075925290525696668747676082112105539395074953365477412301469559858950260),uint256(4594154586437226394452076127560734363696966763267974496550853723612732151304));
        vk.IC[86] = Pairing.G1Point(uint256(15244532626961782816328729554676239130116573352299399696442635297143065136722),uint256(16264067400808255284629914138151864703503231517377905402475157542088372521552));
        vk.IC[87] = Pairing.G1Point(uint256(13412404072841706439721760404171528212883832785394223681641514970735279943894),uint256(18772972421520087602416100777493366840700406847871247779866356020537964956696));
        vk.IC[88] = Pairing.G1Point(uint256(7278518834098053866811197734898595965893448864016564932459779237303281761639),uint256(9543037822177179166761432005315104657257283894479997218038173048112648103966));
        vk.IC[89] = Pairing.G1Point(uint256(1709222636826423108574086973126513957814331116981895535842631406293849262297),uint256(4171313661071748327281373689968909626610309456777530265707325990329480802799));
        vk.IC[90] = Pairing.G1Point(uint256(15179786172976985895438656664754965437591541176657924883571685176235651293728),uint256(11638096950777001048523602013267712327098521271732859050058176904585051580899));
        vk.IC[91] = Pairing.G1Point(uint256(2407781716437481630793286485722773331260575264950391514382377514019101702961),uint256(14458695686781772302449747288128751866667294558156464499992469536004627829083));
        vk.IC[92] = Pairing.G1Point(uint256(16468694895252699887555280460041688687239148427728528952752209086050643766774),uint256(20788646394947004095604345011150936219737186787061030407112092179878706057219));
        vk.IC[93] = Pairing.G1Point(uint256(3991089774358787341484887719129638059357053872667707502370199075852626851388),uint256(3902510497519799402123711531126476360243139127161818082359557470600621147465));
        vk.IC[94] = Pairing.G1Point(uint256(1466886815147365122710697057812173142241409916115347202712031841666728491371),uint256(11081437349185659268515559439118507187272381051158242403039829784368439096334));
        vk.IC[95] = Pairing.G1Point(uint256(15675367948639125929148213270961949441292490055618970357828231434598551590204),uint256(2778909164426958617541800819922952546319291205058583128114764331756307890038));
        vk.IC[96] = Pairing.G1Point(uint256(9493824125881071996157942648835347397579068134315426656519530306969327486571),uint256(13569015783770899535131482373694228204303101581888049300595964306574568460864));
        vk.IC[97] = Pairing.G1Point(uint256(9242602532194001182855914032689535056578184961713113993929815181120862231207),uint256(6484901250930427127830138798552069220619407988056810332966942878581890583162));
        vk.IC[98] = Pairing.G1Point(uint256(1523872847727869237456921431552857964814153573520494518692099453140090587506),uint256(17418695360532982046447994094582201363152685411867522147722234353839392352963));
        vk.IC[99] = Pairing.G1Point(uint256(11399742549177078929798714912076333760007468805044120388679382257106867494165),uint256(10670133949401240696006942337972465426990736934932061421488627959980739421528));
        vk.IC[100] = Pairing.G1Point(uint256(14433470718644592947375658909140593220622114396056063069015450435001476096193),uint256(3402331349906821334617732939054219019484982686825450914946814521361485434979));
        vk.IC[101] = Pairing.G1Point(uint256(21833676945846828172148864519474394581737351469412892197765854727950456147819),uint256(7462335039361807122731055524290203689391395125357934825602744430038141690911));
        vk.IC[102] = Pairing.G1Point(uint256(210066286602533018799742236569265965239665480635234801768634128214921900378),uint256(16977879956906814285553478771463215856313874372007024525393213937911956567308));
        vk.IC[103] = Pairing.G1Point(uint256(19485406473781142572266866513249570342833693458809793171812114197067555622413),uint256(14983003204010254445281945758732583005538659082097191657565536755860705984136));
        vk.IC[104] = Pairing.G1Point(uint256(1643409554143106462161536815350340794659353923663214739221709734566068746896),uint256(11288237047349511313733592916022399013051134309999893750401178613798551720496));
        vk.IC[105] = Pairing.G1Point(uint256(5660270548866243505458641580735922840522326056308552445940776615197111838792),uint256(16533532851632707812388601246498492787400003143775487523391826146411027105771));
        vk.IC[106] = Pairing.G1Point(uint256(18747657054895962286964950383285730210515655024520661768552618132579955125115),uint256(19027238642993917589693815893442453793582302233540587165226862529468750526603));
        vk.IC[107] = Pairing.G1Point(uint256(2650826258757381691643075897762790582637910639050159702541438068052629614054),uint256(3774731589623370538734392851462470712657730891426324115255281048189285372436));
        vk.IC[108] = Pairing.G1Point(uint256(4662400107144032873395173618484459148565405388335329460947219312803233640865),uint256(8073252455973744240359587336736369228115457758316383143255777663748671850386));
        vk.IC[109] = Pairing.G1Point(uint256(13244815569763137509027845541821848396881898000645766685064481010466764272952),uint256(15522973493542306202906347506987443126632067507488219275739902568044982305697));
        vk.IC[110] = Pairing.G1Point(uint256(19749116273014997405254210700055584858311566706740802020066495391263747011588),uint256(11738555759350126374410652439691111485806802038437627641262728151255748920647));
        vk.IC[111] = Pairing.G1Point(uint256(11455436321789801029959926621468100831387257112637033043144729421294765064839),uint256(10277663761094508810186911322351958424104244917715020422247125949835571149267));
        vk.IC[112] = Pairing.G1Point(uint256(12732537264035416277851608224506324531375270159226936067760069141822919044048),uint256(16416240630658544393597970037593706089294118301617257468224946372126948974082));
        vk.IC[113] = Pairing.G1Point(uint256(10516115624793536684758243788374015086509817039690631741147324866729714618420),uint256(7281097342761181523840666064202614730291420363390735832776326394623945061814));
        vk.IC[114] = Pairing.G1Point(uint256(1902373706865446835156364162955903136789061174445568661057522144610650427069),uint256(5452659003657947834438667736032309272469975574808215759517389777040039530319));
        vk.IC[115] = Pairing.G1Point(uint256(11891140194810316547361992199254053502185941207721636377627299695075892638278),uint256(16130283882098494590042359320753560234548959693114287821736368875186436623966));
        vk.IC[116] = Pairing.G1Point(uint256(14522514398752668329215638117210177464868398724634637927944188255719495719791),uint256(3403517244273478901791556803769637205898834452903997586511432370635451167411));
        vk.IC[117] = Pairing.G1Point(uint256(5734575700530357400562096763439606095780205077210360017987438644395685957016),uint256(14336954586773900618591010892691057715838366325074462859243020677418854888386));
        vk.IC[118] = Pairing.G1Point(uint256(12945113475405829440179988254017674878359904858305320385471664828323468960215),uint256(9331695673206621682725776908309057304745443130609501436382308569434664050737));
        vk.IC[119] = Pairing.G1Point(uint256(12805183903263949727947933481510994462075090289151015632646584549911707672114),uint256(15054758166003413547242371494822609546352775865411590496523538807337930162163));
        vk.IC[120] = Pairing.G1Point(uint256(1461650666181324607934715397719669697167766930891294777923440461927270052477),uint256(19979989352259333167426847501212112161778188563489085835157314671288124368343));
        vk.IC[121] = Pairing.G1Point(uint256(11200654822846841133725824364839307380833213205471277971844423265332774024060),uint256(10238782818030344762170615817154386114792703189345414964959003512861602156265));
        vk.IC[122] = Pairing.G1Point(uint256(18744324171982470808688651814809297411690580944649636605549308210994185657270),uint256(1328654417237017417010783392800592190819703116836024667917667110819463217203));
        vk.IC[123] = Pairing.G1Point(uint256(612266599210749035013745392268833690974426686975573120141391354476146241027),uint256(7903077119396400694450206637930278212614063414142131659931620450565889229384));
        vk.IC[124] = Pairing.G1Point(uint256(12798298805836523370442542016556603769932526767799169681647656847075273744276),uint256(2999423457284549668595714800652056858584184770644989181648205538604660031710));
        vk.IC[125] = Pairing.G1Point(uint256(15562951103048198246058544397019105032195165943285808912291386560600736792878),uint256(17254303321388628569857907786894515305009188117276406287966816967851392077824));
        vk.IC[126] = Pairing.G1Point(uint256(7857905771896587186044136087414656474604671307343998508011003584850698242314),uint256(965966572394044230411443545922398510058722123750783128100264132456694748186));
        vk.IC[127] = Pairing.G1Point(uint256(6826563322944870206262950323378042094930942787115856237220092687812916923338),uint256(16997356694684541445466543668304270868828514937784717244056774581901581744501));
        vk.IC[128] = Pairing.G1Point(uint256(6916461496370818557272906066818414648287924724221672605801357595072816551227),uint256(18709969507672604061817338077692474555037780314646588254854697996453602915421));
        vk.IC[129] = Pairing.G1Point(uint256(13953856422146529357914602862431925106403810477983604430514681346184534247396),uint256(5852214220014262914689217151035149197684391482947611614040822660076949017339));
        vk.IC[130] = Pairing.G1Point(uint256(883027530876177460300657468207253106021065999640005620485264456323124773674),uint256(9645521061995659521432534479570562814747093346092082788327789703319317765640));
        vk.IC[131] = Pairing.G1Point(uint256(7682396289453340034942765191901335113671659387001278538463716593824450777179),uint256(11159553141771355181354519876188974719165136270626670989121305930207064649429));
        vk.IC[132] = Pairing.G1Point(uint256(7834352299743738961211888560865104800760657368650393621357707010227902129305),uint256(5256303466095737975531528989934871846609654422399758301358728690752178996964));
        vk.IC[133] = Pairing.G1Point(uint256(5115977327746256824998071788278199443411955778535105982357034789442747671146),uint256(5868891348240646803024539375568175374772325608896242181635723021982168546519));
        vk.IC[134] = Pairing.G1Point(uint256(18828553669800119068476997516015930097243571498795866530032170278543012797891),uint256(1286300698474334950849038692739675849219302930241092756607360829287530426744));
        vk.IC[135] = Pairing.G1Point(uint256(18655018460061098164066901184027734560881886408801867234084210199953746031888),uint256(16134600889715752130216186812644915735718850558240252492338479115835565582540));
        vk.IC[136] = Pairing.G1Point(uint256(4485659543400195319589657606363653034690372730120772385411739404388056406598),uint256(12596043386375142555047260357771861294052774830451299708187886980188757722437));

    }
    
    /*
     * @returns Whether the proof is valid given the hardcoded verifying key
     *          above and the public inputs
     */
    function verifyProof(
        uint256[2] memory a,
        uint256[2][2] memory b,
        uint256[2] memory c,
        uint256[] memory input
    ) public view returns (bool) {

        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);

        VerifyingKey memory vk = verifyingKey();

        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);

        // Make sure that proof.A, B, and C are each less than the prime q
        require(proof.A.X < PRIME_Q, "verifier-aX-gte-prime-q");
        require(proof.A.Y < PRIME_Q, "verifier-aY-gte-prime-q");

        require(proof.B.X[0] < PRIME_Q, "verifier-bX0-gte-prime-q");
        require(proof.B.Y[0] < PRIME_Q, "verifier-bY0-gte-prime-q");

        require(proof.B.X[1] < PRIME_Q, "verifier-bX1-gte-prime-q");
        require(proof.B.Y[1] < PRIME_Q, "verifier-bY1-gte-prime-q");

        require(proof.C.X < PRIME_Q, "verifier-cX-gte-prime-q");
        require(proof.C.Y < PRIME_Q, "verifier-cY-gte-prime-q");

        // Make sure that every input is less than the snark scalar field
        //for (uint256 i = 0; i < input.length; i++) {
        for (uint256 i = 0; i < 136; i++) {
            require(input[i] < SNARK_SCALAR_FIELD,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }

        vk_x = Pairing.plus(vk_x, vk.IC[0]);

        return Pairing.pairing(
            Pairing.negate(proof.A),
            proof.B,
            vk.alpha1,
            vk.beta2,
            vk_x,
            vk.gamma2,
            proof.C,
            vk.delta2
        );
    }
}

