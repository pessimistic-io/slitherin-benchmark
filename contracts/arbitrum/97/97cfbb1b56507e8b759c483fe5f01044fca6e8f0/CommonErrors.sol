// SPDX-License-Identifier: BUSL-1.1
pragma solidity ^0.8.4;

// NOTE: When adding error messages, make sure to sort lines ascending
abstract contract CommonErrors {
    error AccountNoAssets(address account);
    error AddressExpected();
    error AlreadyInitialized();
    error AmountIsZero();
    error BorrowTooMuch();
    error ChainIdExpected();
    error ClaimerDenylisted();
    error ContractNoIdentifier(address);
    error EccMessageAlreadyProcessed();
    error EnterCollMarketFailed();
    error EnterLoanMarketFailed();
    error ExitCollMarketFailed();
    error ExitLoanMarketFailed();
    error ExpectedBorrowAmount();
    error ExpectedBridgeAmount();
    error ExpectedDepositAmount();
    error ExpectedMintAmount();
    error ExpectedRepayAmount();
    error ExpectedTradeAmount();
    error ExpectedTransferAmount();
    error ExpectedValue();
    error ExpectedWithdrawAmount();
    error ExpectedNewZroPaymentAddress();
    error GasAmountExpected();
    error IncorrectTargetAddress(address receivedAddress, address expectedAddress);
    error IncorrectTargetChainId(uint256 receivedChainId, uint256 expectedChainId);
    error InsufficientLiquidity();
    error InsufficientReserves();
    error InsufficientRewards();
    error InvalidExchangeRate();
    error InvalidLiquidityIncentive();
    error InvalidProtocolSeizeShare();
    error InvalidPayload();
    error InvalidPrecision();
    error InvalidPrice();
    error InvalidRatio();
    error InvalidRiskPremium();
    error InvalidSelector();
    error LiquidateDisallowed();
    error LoanMarketIsListed(bool status);
    error MarketExists();
    error MarketDoesNotExist();
    error MarketIsdeprecated(address market);
    error MarketIsFrozen(address market);
    error MarketIsUnlisted();
    error MarketNotListed();
    error MaxMarketsEntered();
    error MiddleLayerExpected();
    error MiddleLayerPaused();
    error MissingParameter();
    error MsgDataExpected();
    error MsgValueTooLow();
    error MultiCallFailed(uint256 index, bytes data, bytes reason);
    error MultiStaticCallFailed(uint256 index, bytes data);
    error NameExpected();
    error NotEnoughBalance(address token, address who);
    error NothingToWithdraw();
    error NotInMarket(uint256 chainId, address token);
    error OnlyAccount();
    error OnlyAdmin();
    error OnlyAdminCandidate();
    error OnlyAuth();
    error OnlyGateway();
    error OnlyRequestController();
    error OnlyLayerZeroEndpoint();
    error OnlyMasterState();
    error OnlyMiddleLayer();
    error OnlyMintAuth();
    error OnlyPToken();
    error OnlyRelayer();
    error OnlyRoute();
    error OnlyRouter();
    error PairNotSupported(address loanAsset, address tradeAsset);
    error ParamOutOfBounds();
    error PTokenIsFrozen(address pToken);
    error RebasingTokensUnableToBeLoanable();
    error Reentrancy();
    error RepayTooMuch(uint256 repayAmount, uint256 maxAmount);
    error RewardDoesNotExist();
    error RewardExists();
    error RewardNotListed();
    error RouteExists();
    error RouteNotSupported(address route);
    error RsmNotFound();
    error SeizeTooMuch();
    error SymbolExpected();
    error TradeAssetNotSupported();
    error TransferFailed(address from, address dest, uint256 amount);
    error TransferFromFailed(address from, address dest, uint256 amount);
    error TransferPaused();
    error UnexpectedDelta();
    error UnexpectedIdentifier(bytes32 got, bytes32 expected);
    error UnexpectedSelector(bytes4 selector);
    error UnexpectedValueDelta();
    error UnknownRevert();
    error UnstakeTooMuch();
    error UspAddressZero();
    error WithdrawTooMuch();
    error GasLimitTooLow(uint256 gasLimit);
}

