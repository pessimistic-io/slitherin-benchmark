// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;

/**
 *  @title Coupon set methods specified address.
 *  @notice Contains the methods necessary to authenticate the coupon.
 */
library CouponSet {
    // The coupon struct generated by the signing process off-chain
    struct Coupon {
        bytes32 r;
        bytes32 s;
        uint8 v;
    }

    function _isVerifiedCoupon(
        Coupon memory _coupon,
        uint256 _tokenId,
        uint256 _validInfo,
        address _adminSigner
    ) internal view returns (bool) {
        bytes32 digest = _createDigest(_tokenId, _validInfo);
        address signer = ecrecover(digest, _coupon.v, _coupon.r, _coupon.s);
        require(signer != address(0), "ECDSA: invalid signature");
        return signer == _adminSigner;
    }

    function _createDigest(
        uint256 _tokenId,
        uint256 _validInfo
    ) internal view returns (bytes32) {
        return
            keccak256(abi.encode(_tokenId, _validInfo, msg.sender));
    }
}

