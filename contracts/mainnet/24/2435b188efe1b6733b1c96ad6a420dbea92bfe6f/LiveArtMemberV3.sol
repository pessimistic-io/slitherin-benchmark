// SPDX-License-Identifier: MIT
pragma solidity ^0.8.2;

import "./LiveArtMemberV2.sol";

//|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\//
//|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\//
//|_/\//                                                                                        //|_/\//
//|_/\//                                                                                        //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@, @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.  %@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%     /@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,   #@@@@@@@@@@@@@@@@@@@@@@@@@@@@(       .@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,    /@@@@@@@@@@@@@@@@@@@@@@@@@@*          @@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,     ,@@@@@@@@@@@@@@@@@@@@@@@@.            &@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,       &@@@@@@@@@@@@@@@@@@@@&               (@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,        #@@@@@@@@@@@@@@@@@@(                 ,@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,         /@@@@@@@@@@@@@@@@.                    &@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,          ,@@@@@@@@@@@@@@                       %@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,            @@@@@@@@@@@@                         (@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,             #@@@@@@@@#                           *@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,              *@@@@@@*                              @@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,               .@@@@.                                %@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@,                 @&                                   (@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //|_/\//
//|_/\//                                                                                        //|_/\//
//|_/\//                                                                                        //|_/\//
//|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\//
//|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\|_/\//

contract LiveArtMemberV3 is LiveArtMemberV2 {
    address public membershipContractV2;

    /**
     * @dev Destroys `tokenId`.
     *
     * Requirements:
     *
     * - `tokenId` must exist.
     *
     * Emits a {Transfer} event.
     */

    function burnMembership(uint256 tokenId) external nonReentrant {
        require(
            _exists(tokenId),
            "LiveArtMember: operator query for nonexistent token"
        );

        require(
            ownerOf(tokenId) == msg.sender ||
                msg.sender == membershipContractV2,
            "LiveArtMember: not owner or membershipContractV2"
        );

        _burn(tokenId);
    }

    /**
     * @dev sets membershipContractV2 address.
     *
     * Requirements:
     *
     * - `msg.sender` must be owner.
     *
     */
    function setMembershipContractV2(
        address _membershipContractV2
    ) external onlyOwner {
        membershipContractV2 = _membershipContractV2;
    }

    function getMembershipLevelById(
        uint256 tokenId
    ) external view returns (uint256) {
        Member storage membership = tokenExtend[tokenId];
        return membership.level;
    }
}

