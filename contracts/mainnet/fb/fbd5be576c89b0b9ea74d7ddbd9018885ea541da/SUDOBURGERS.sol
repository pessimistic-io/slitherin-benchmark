// SPDX-License-Identifier: MIT

    //                                 ██▓▓████████████████████                                        
    //                           ██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒██████                                  
    //                         ██░░▒▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████                              
    //                       ██░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒████                          
    //                     ██░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████                      
    //                   ██░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒██                    
    //                 ██░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██                  
    //                 ██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░██                
    //             ████▒▒████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░██                
    //           ██▒▒░░▒▒▒▒▒▒██████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░██              
    //         ▓▓░░░░░░░░▒▒▒▒▒▒▒▒▒▒████▓▓██▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██              
    //         ████▒▒▒▒▒▒░░░░▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██              
    //             ██▒▒░░░░▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒████████░░░░░░░░░░░░░░░░░░░░░░░░██              
    //           ▓▓▒▒░░░░░░▒▒▒▒░░░░░░▒▒▒▒░░░░░░░░▒▒▒▒░░▒▒▒▒▒▒▒▒██▓▓██▓▓░░░░░░░░░░░░░░░░██▒▒▓▓▓▓        
    //           ██▒▒░░▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▒▒░░░░░░▒▒▒▒▒▒░░▒▒▒▒████░░░░░░░░░░██░░░░░░░░██      
    //             ████████████████▒▒▒▒██████▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▒▒░░░░▒▒▒▒▒▒██████████▒▒▒▒▒▒░░░░██      
    //               ████▒▒▓▓▓▓▓▓▓▓████▓▓▓▓██▒▒▒▒▒▒▒▒████████▒▒▒▒░░░░██▒▒▒▒▒▒░░░░▒▒▒▒░░░░▒▒▒▒██        
    //             ██▒▒██▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓██▒▒░░██▓▓██▒▒▒▒░░░░▒▒▒▒▒▒░░░░██          
    //           ██▒▒▒▒▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓██▒▒██▒▒▒▒▓▓▓▓████▓▓▓▓██▒▒▒▒░░░░████▒▒░░░░░░██        
    //           ██▒▒▒▒▒▒▒▒▒▒██▓▓▓▓██▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▒▒░░▓▓▒▒▒▒████▒▒▓▓██        
    //         ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████████▒▒▒▒▒▒▒▒▒▒▒▒██████████▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒▒▒██▒▒▒▒██      
    //     ██████▒▒▒▒██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████  
    //   ██▒▒▒▒▒▒████▒▒▒▒▒▒██▒▒▒▒▒▒▒▒▒▒██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██
    // ██▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒██▒▒▒▒████▓▓▓▓▓▓████▒▒▒▒▒▒██████▓▓▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████▓▓▒▒▒▒▒▒▒▒██
    // ████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▓▓▓▓▓▓▒▒▓▓▓▓▓▓██████▓▓▓▓▓▓▒▒▒▒▓▓██▒▒▒▒▒▒▒▒▒▒██████▓▓▓▓██  ██████▒▒██
    //     ████▓▓██▒▒▒▒▒▒▒▒▒▒████▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓████░░██      ██  
    //           ██▒▒▒▒▒▒████░░░░████████▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▒▒▓▓████░░░░██          
    //           ████████▓▓██░░░░░░░░░░░░████████████████████████▓▓▓▓██████▓▓▓▓▓▓██░░██░░░░██          
    //               ██▓▓▓▓▓▓██░░░░░░░░░░░░░░░░░░░░░░░░██▓▓▓▓▓▓▓▓████▓▓▓▓▓▓██████░░░░██░░░░██          
    //               ██▓▓▒▒▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██░░░░▒▒▒▒██░░██          
    //                 ████████████░░░░░░░░░░░░████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████░░░░▒▒▒▒▒▒████            
    //               ██▒▒▒▒▒▒░░░░░░██░░░░░░████░░░░██████████████████░░░░██░░░░▒▒▒▒▒▒▒▒██              
    //               ██▒▒▒▒▒▒▒▒▒▒░░▒▒▓▓░░██░░░░░░░░░░░░░░████░░░░░░░░░░▓▓░░▒▒▒▒▒▒▒▒▒▒██                
    //               ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▓▓░░░░██▒▒▒▒▒▒▒▒▒▒▒▒▒▒██                
    //                 ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒██                  
    //                 ░░▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██░░                  
    //                       ████▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████▓▓                        
    //                               ██████████████████████████████████                  

// NhhdNNNNNNNNNNNNNNNMNhhNMMMMMMMMmhhhhdMMMMMMMMMddMMMMMMMMMMMMMMMMMMMMNdhhhhhdMmdddddddddddddddddNNhN
// moyo/:::::::::::::::+doy::::::::m....h+-------/dm:-------------------:oy/..ss:-.................-+hN
// Mo..................-moo........N....h:.......:dm-.....................-d-/h....................../M
// M...................-moo........N....h:.......:dd-......................y++s......................-M
// N.........----------:dos........m....h/.......:dd-.......-:::::-........yo+s........:+++++-.......-M
// N......../y+++++++++o/os........m....h/.......:dd-......./h++++h........so+s........d/:::h/.......-M
// N........oo...........os........m....h/.......:dd-......./h....m........so+y........d-...y/.......-M
// M........+h:::::::-...os........m....h/.......-dd-......./h....m........so+y........d-...y+.......-M
// M........-///////+os/.os........m....h/.......-dd-......./h....m........so+y........d-...y+.......-M
// M..................-y+os........m....h/.......-dd-......./h....m........so+y........d-...y+.......-M
// M/..................:dos........m....h/.......-dd:......./h....m........so+y........d-...y+.......-M
// Ny/--------..........mos........m....h/.......-dd:......./h....m........so+y........d-...y+.......-M
// m-+ooooooooy-........moy........m-...h/.......-dd:......./h....m........so+y........d-...y+.......-M
// m..........h+........Noy........d:...h+.......-md:.......:h....N........oo+y........d-...y+........M
// m----------h+........N+y........d/---h/.......-Nd:.......:h---:m........oo+y........h:---y+........M
// Msoooooooooo-........N/y........:oooo+-.......-Nd:.......-oooo+:........oo+h......../ooooo-........M
// M-...................N/y......................-Nd:......................oo+h.......................M
// M-..................:d:d......................:dd:.........SUDOSIX2k22..oo+h......................-M
// M-................./h/.ss-..................-/h:d:....................:ss..ss-...................:hN
// Nsoooooooooooooooos+-...:osooooooooosoooooooo+-.+soooosssssssssssssosso:----/ssooooossssssssssssso:m
// Nsssssssssssssss+hsssssh:./hsssssdsssssssssooooos+-ossssssssssssssoysooooooooooooomhooooooooooooossm
// N.............-:dh.....y+.oo.....d-.............-ydo-............-sM-.............do............../M
// N...............sh.....y+.os.....d-..............+M:......--......+M:.....--------do.....----......M
// N...../ysso.....sh.....y+.os.....d-....:dssh.....+M:....-dooh...../M:....-d+++++++ho.....ho+h:.....M
// N.....+y:+d.....sh.....y+.os.....d-....:d..m...../M:....-m..d/////oM:....-m/////..so.....m-.y/.....M
// N.....:o++/.....hh.....y+.os.....d:....-hooy.....+M:....-m:/+oossssm:....-/////h/.so.....ysss-....-M
// N............-/yhh.....y+.os.....d:.....---...--/hm:....-mm///::::oM:..........y+.so............-/yN
// N.....-----..-:+dh.....y+.os.....d:...........-:shd:....-mm::...../M:.....:::::y/.ss............:/yN
// M...../y+oy.....sh.....s+.os.....d:....-yooo.....+M:....-m/+m-..../M:....-m++++/-.ss.....ssoy:....-M
// M...../h/+h.....oh.....ss/ss.....h:....-m..m-..../M/....-d++m-..../M:....-m+++++++hs.....d-.y+.....N
// M.....-///:.....od.....-///-.....h:....-m..m-..../M/.....-::-...../M:.....-:------hs.....d-.y+.....N
// M...............ym-.............-m:....-m..m-..../Mo..............+M/.............hs.....d/.y+.....N
///////////////////////////////////////////////////////////////////////////////////////////////////////

pragma solidity ^0.8.2;

import "./ERC721.sol";
import "./ERC721Enumerable.sol";
import "./Ownable.sol";
import "./Counters.sol";

contract SUDOBURGER is ERC721, ERC721Enumerable, Ownable {
    using Counters for Counters.Counter;
    address ingredientsAddress;
    string uri = "https://us-central1-sudoburger-9b96e.cloudfunctions.net/app/burger/";
    Counters.Counter private _tokenIdCounter;

    constructor() ERC721("SUDOBURGERS", "SUDOBURGER") {}

    event orderUp(uint256[] seq, uint256 burgerId);

    function _baseURI() internal view override returns (string memory) {
        return uri;
    }

    //set URI root // will be changed to a ipfs hash once SUDOBURGER supply is capped.
    function setURI(string memory newuri) public onlyOwner {
        uri = newuri;
    }

    function grillIngredients(address to, uint256[] memory id) public returns(uint256) {
        require(msg.sender == ingredientsAddress, "Only accepts minting via the INGREDIENTS contract");
        uint256 burgerId = _tokenIdCounter.current();
        _tokenIdCounter.increment();
        _safeMint(to, burgerId);
        emit orderUp(id, burgerId);
        return burgerId;
    }

    function setIngredientsAddress(address newAddress) public onlyOwner { 
        ingredientsAddress = newAddress;
    }

    // The following functions are overrides required by Solidity.

    function _beforeTokenTransfer(address from, address to, uint256 tokenId)
        internal
        override(ERC721, ERC721Enumerable)
    {
        super._beforeTokenTransfer(from, to, tokenId);
    }

    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(ERC721, ERC721Enumerable)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
}
